#-----------------------------------------------------------------------------
# (c) 2024 Condor Computing Corp
#-----------------------------------------------------------------------------
# lea_w.S

#include "riscv_test.h"
#include "test_macros.h"
#include "andestar_test.h"
#include "andestar_test_macros.h"

RVTEST_RV64U
ASTAR_CODE_BEGIN

  #-------------------------------------------------------------
  # Basic tests
  #-------------------------------------------------------------

#                                            expect,              offset,                base
  ASTAR_TEST_LEA_OP( 10, lea.w,  0x1000000000000000,  0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 11, lea.w,  0x1000000000000004,  0x0000000000000001,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 12, lea.w,  0x1000000000000008,  0x0000000000000002,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 13, lea.w,  0x1000000000000010,  0x0000000000000004,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 14, lea.w,  0x1000000000000020,  0x0000000000000008,  0x1000000000000000 );

  ASTAR_TEST_LEA_OP( 20, lea.w,  0x1000000000000000,  0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 21, lea.w,  0x1000000000040000,  0x0000000000010000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 22, lea.w,  0x1000000000080000,  0x0000000000020000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 23, lea.w,  0x1000000000100000,  0x0000000000040000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 24, lea.w,  0x1000000000200000,  0x0000000000080000,  0x1000000000000000 );

  ASTAR_TEST_LEA_OP( 30, lea.w,  0x1000000000000000,  0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 31, lea.w,  0x1000000400000000,  0x0000000100000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 32, lea.w,  0x1000000800000000,  0x0000000200000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 33, lea.w,  0x1000001000000000,  0x0000000400000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 34, lea.w,  0x1000002000000000,  0x0000000800000000,  0x1000000000000000 );

  ASTAR_TEST_LEA_OP( 40, lea.w,  0x1000000000000000,  0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 41, lea.w,  0x1004000000000000,  0x0001000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 42, lea.w,  0x1008000000000000,  0x0002000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 43, lea.w,  0x1010000000000000,  0x0004000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 44, lea.w,  0x1020000000000000,  0x0008000000000000,  0x1000000000000000 );

#                                            expect,              offset,                base
  ASTAR_TEST_LEA_OP( 50, lea.w,  0x1000000000000000, -0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 51, lea.w,  0x0ffffffffffffffc, -0x0000000000000001,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 52, lea.w,  0x0ffffffffffffff8, -0x0000000000000002,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 53, lea.w,  0x0ffffffffffffff0, -0x0000000000000004,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 54, lea.w,  0x0fffffffffffffe0, -0x0000000000000008,  0x1000000000000000 );

  ASTAR_TEST_LEA_OP( 60, lea.w,  0x1000000000000000, -0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 61, lea.w,  0x0ffffffffffc0000, -0x0000000000010000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 62, lea.w,  0x0ffffffffff80000, -0x0000000000020000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 63, lea.w,  0x0ffffffffff00000, -0x0000000000040000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 64, lea.w,  0x0fffffffffe00000, -0x0000000000080000,  0x1000000000000000 );

  ASTAR_TEST_LEA_OP( 70, lea.w,  0x1000000000000000, -0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 71, lea.w,  0x0ffffffc00000000, -0x0000000100000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 72, lea.w,  0x0ffffff800000000, -0x0000000200000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 73, lea.w,  0x0ffffff000000000, -0x0000000400000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 74, lea.w,  0x0fffffe000000000, -0x0000000800000000,  0x1000000000000000 );

  ASTAR_TEST_LEA_OP( 80, lea.w,  0x1000000000000000, -0x0000000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 81, lea.w,  0x0ffc000000000000, -0x0001000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 82, lea.w,  0x0ff8000000000000, -0x0002000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 83, lea.w,  0x0ff0000000000000, -0x0004000000000000,  0x1000000000000000 );
  ASTAR_TEST_LEA_OP( 84, lea.w,  0x0fe0000000000000, -0x0008000000000000,  0x1000000000000000 );

  ASTAR_TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
